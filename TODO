v0.2
  - Put casting and type conversion on compiler side. (not on __core execution)

v0.3
  - String class
  - Integrate real with Number class
  - Regex (using class ?)
  - JSON (using class ?)
  - List and Dictionary classes
  - FOR statement
  - SWITCH statement
  - '->' and '<-' link operation (like pointers. Copy address and point to class instance)
  [BUG]- (this + "a").Print(); 
  [BUG]- For list read return the S_LIST_ITEM and not the payload. Otherwise list is like a global object (see __core_exe_statement).


v?
  - JSON export / import for every object
  - Dump / Load all memory to a JSON (like saving a snapshot for old NES games)
  - GIT like included features for "seamless" switch to changes in software (using above feature JSON dump/load)