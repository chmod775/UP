Test {
    (a : Number) {

    }
}

pp : Test = Test(1);

r:Number = Number(775);
// Using basic types
    m    :      Number       =5; // Hello

// p : r = 6; // :DDDDDDDDD

s1:Number = 1;
s2:Number = 2;
s3:Number = s1 + s2;

Add(a : Number, b : Number = 1) : Number {
    a + b;
}

Add(a : Number, b : Number, c : Number) : Number {
    a + c;
    s3 = a;
}

Actuator {
    test : Number = 0;

    Motor {
        Pump {

        }
        Positioner {
            (aaaa : Number) {
                test = s3;
            }
        }
    }

    speed : Motor.Pump = 0;
    speed2 : Motor.Positioner = 0;

    (speeeeed : Number) {
        speed = speeeeed;
    }

    () {
        speed = 775;
    }
}

Add(a : Number, b : Number, c : Actuator) : Number {
    a + c;
}

Actuator {
    EV {

    }

    Motor {
        Fan {
            running : Number = 0;
            Start() {
                running = 255;
            }

            Start(state : Number) {
                running = state;
            }
        }
    }

    monostable : Number = 0;
}

Main() {
    t : Number = 0;
    tt : Actuator = 0;
    //DEBUG
    tt2 : Actuator.Motor = 0;
    ttttt2 : Actuator.EV = 0;
    ttt1 : Actuator.Motor.Pump = 0;
    ttt2 : Actuator.Motor.Positioner = 0;
    ttt3 : Actuator.Motor.Fan = 0;

    ttt3.Start(1);
    ttt3.running;

    r = m + 3;
    r++;
    <r;
    <(r < 10);
    r = r + 1;
    <r;
    <r + (m + 8);
    <(m+m+m+m+m+m+m+m+m);

    //Add(4, 5) + 5;

    m = 775;

    <(m);
    <(r);

    <(s3);

    while (s3 < 10000) {
        s2 = 0;
        while (s2 < 1000) s2++;
        s3=s3 + s2;
    }


    <(s3);
}



